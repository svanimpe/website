import{_ as e,o as r,c as a,R as s}from"./chunks/framework.X3d09HAs.js";const m=JSON.parse('{"title":"Exercises 3","description":"","frontmatter":{},"headers":[],"relativePath":"exercises/exercises3.md","filePath":"exercises/exercises3.md"}'),i={name:"exercises/exercises3.md"},t=s('<h1 id="exercises-3" tabindex="-1">Exercises 3 <a class="header-anchor" href="#exercises-3" aria-label="Permalink to &quot;Exercises 3&quot;">​</a></h1><p>Use your favorite editor or IDE to solve the following exercises. Afterward, compare your solutions with the ones in the <a href="./../preface.html#resources">solutions bundle</a>.</p><p>For these exercises, you’ll be asked to declare one or more functions. Choose appropriate parameters, argument labels, and return values for your functions.</p><p>Include at least one function call with every function you declare, to show that you know how to call the function.</p><h2 id="exercise-3-1" tabindex="-1">Exercise 3.1 <a class="header-anchor" href="#exercise-3-1" aria-label="Permalink to &quot;Exercise 3.1&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Note</p><p>This exercise builds on <a href="./exercises1.html#temperature">Exercise 1.5</a>.</p></div><p>Declare a set of functions to convert temperatures from Celsius to Fahrenheit and vice versa.</p><h2 id="exercise-3-2" tabindex="-1">Exercise 3.2 <a class="header-anchor" href="#exercise-3-2" aria-label="Permalink to &quot;Exercise 3.2&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Note</p><p>This exercise builds on <a href="./exercises1.html#angles">Exercise 1.8</a>.</p></div><p>Declare a set of functions to convert angles from degrees to radians and vice versa.</p><h2 id="exercise-3-3" tabindex="-1">Exercise 3.3 <a class="header-anchor" href="#exercise-3-3" aria-label="Permalink to &quot;Exercise 3.3&quot;">​</a></h2><p>Declare a function to convert an integer from decimal to binary. The function should return a string containing a bit pattern. For example, for an input of <code>13</code>, the function should return <code>&quot;1101&quot;</code>.</p><div class="tip custom-block"><p class="custom-block-title">Tip</p><p>There are several ways to build this bit pattern. The easiest approach is to start at the end. Figure out how to find the last bit, then use the same technique to find the other bits.</p></div><p>You only have to convert positive numbers. For negative numbers, simply add a minus sign in front of the bit pattern.</p><h2 id="exercise-3-4" tabindex="-1">Exercise 3.4 <a class="header-anchor" href="#exercise-3-4" aria-label="Permalink to &quot;Exercise 3.4&quot;">​</a></h2><p>Declare a function to convert an integer from decimal to <strong>hexadecimal</strong>. Look up how hexadecimal numbers work, then modify your solution for the previous exercise to generate a hexadecimal string.</p><h2 id="exercise-3-5" tabindex="-1">Exercise 3.5 <a class="header-anchor" href="#exercise-3-5" aria-label="Permalink to &quot;Exercise 3.5&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Note</p><p>This exercise builds on <a href="./exercises2.html#fibonacci">Exercise 2.7</a>.</p></div><p>Declare a function to calculate Fibonacci numbers.</p><h2 id="exercise-3-6" tabindex="-1">Exercise 3.6 <a class="header-anchor" href="#exercise-3-6" aria-label="Permalink to &quot;Exercise 3.6&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Note</p><p>This exercise builds on <a href="./exercises2.html#factorial">Exercise 2.8</a>.</p></div><p>Declare a function to calculate the factorial of a number.</p><h2 id="exercise-3-7" tabindex="-1">Exercise 3.7 <a class="header-anchor" href="#exercise-3-7" aria-label="Permalink to &quot;Exercise 3.7&quot;">​</a></h2><p>Reimplement your solution to Exercise 3.5 using recursion.</p><h2 id="exercise-3-8" tabindex="-1">Exercise 3.8 <a class="header-anchor" href="#exercise-3-8" aria-label="Permalink to &quot;Exercise 3.8&quot;">​</a></h2><p>Reimplement your solution to Exercise 3.6 using recursion.</p><h2 id="exercise-3-9" tabindex="-1">Exercise 3.9 <a class="header-anchor" href="#exercise-3-9" aria-label="Permalink to &quot;Exercise 3.9&quot;">​</a></h2><p>Reimplement your solution to Exercise 3.3 using recursion.</p>',28),o=[t];function c(n,l,h,u,d,x){return r(),a("div",null,o)}const f=e(i,[["render",c]]);export{m as __pageData,f as default};
