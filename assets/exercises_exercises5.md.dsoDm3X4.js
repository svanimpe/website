import{_ as e,o as s,c as a,R as r}from"./chunks/framework.X3d09HAs.js";const k=JSON.parse('{"title":"Exercises 5","description":"","frontmatter":{},"headers":[],"relativePath":"exercises/exercises5.md","filePath":"exercises/exercises5.md"}'),i={name:"exercises/exercises5.md"},t=r(`<h1 id="exercises-5" tabindex="-1">Exercises 5 <a class="header-anchor" href="#exercises-5" aria-label="Permalink to &quot;Exercises 5&quot;">​</a></h1><p>These exercises focus on using arrays and dictionaries.</p><p>As with the previous exercises, whenever you’re asked to declare a function, it’s up to you to choose appropriate parameters, argument labels, and return values. Also, include at least one function call with every function you declare, to show that you know how to call the function.</p><h2 id="exercise-5-1" tabindex="-1">Exercise 5.1 <a class="header-anchor" href="#exercise-5-1" aria-label="Permalink to &quot;Exercise 5.1&quot;">​</a></h2><p>Declare a function to calculate the sum of an array of numbers.</p><h2 id="exercise-5-2" tabindex="-1">Exercise 5.2 <a class="header-anchor" href="#exercise-5-2" aria-label="Permalink to &quot;Exercise 5.2&quot;">​</a></h2><p>Declare a function that takes an array of numbers and returns a new array where the order of the elements is reversed.</p><p>This is exactly what the <code>reversed</code> method of type <code>Array</code> does. Your solution shouldn’t rely on this method; the exercise is to implement it yourself.</p><h2 id="exercise-5-3" tabindex="-1">Exercise 5.3 <a class="header-anchor" href="#exercise-5-3" aria-label="Permalink to &quot;Exercise 5.3&quot;">​</a></h2><p>Declare a function that takes an array of numbers and returns a new array where the elements are sorted from small to large.</p><p>This is exactly what the <code>sorted</code> method of type <code>Array</code> does. Your solution shouldn’t rely on this method; the exercise is to implement it yourself.</p><h2 id="exercise-5-4" tabindex="-1">Exercise 5.4 <a class="header-anchor" href="#exercise-5-4" aria-label="Permalink to &quot;Exercise 5.4&quot;">​</a></h2><p>Declare a function <code>characters(in:)</code> that checks which characters occur in a string and returns the number of times each of these characters occur.</p><p>Like arrays and dictionaries, strings are collections. This means you can use a <code>for-in</code> loop to iterate over the characters in a string:</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;some string&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> character </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>You’ll need this to solve the exercise.</p><h2 id="exercise-5-5" tabindex="-1">Exercise 5.5 <a class="header-anchor" href="#exercise-5-5" aria-label="Permalink to &quot;Exercise 5.5&quot;">​</a></h2><p>Declare a function <code>words(in:)</code> that checks which words occur in a string and returns the number of times each of these words occur.</p><h2 id="exercise-5-6" tabindex="-1">Exercise 5.6 <a class="header-anchor" href="#exercise-5-6" aria-label="Permalink to &quot;Exercise 5.6&quot;">​</a></h2><p>Declare a function <code>stats(for:)</code> that returns the number of lines, words, and characters in a string.</p>`,20),o=[t];function n(c,h,l,d,p,u){return s(),a("div",null,o)}const f=e(i,[["render",n]]);export{k as __pageData,f as default};
